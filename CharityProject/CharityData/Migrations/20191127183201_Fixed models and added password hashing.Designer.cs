// <auto-generated />
using System;
using CharityProject;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CharityData.Migrations
{
    [DbContext(typeof(CharityContext))]
    [Migration("20191127183201_Fixed models and added password hashing")]
    partial class Fixedmodelsandaddedpasswordhashing
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CharityData.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("email");

                    b.Property<Guid>("imageId");

                    b.Property<bool>("isUser");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("account");

                    b.HasData(
                        new { Id = new Guid("e7146b70-ad4d-4d28-ba0c-c420b18c14cc"), email = "sampleUser1@mail.com", imageId = new Guid("bcf0ffae-1f10-4d24-8baa-84cb11442f52"), isUser = true, password = "c72a944b810cb996c3107ae0a774980f1e4ec1232990a3c62a73c750675bcd5d", username = "sampleUser1" },
                        new { Id = new Guid("68984eae-1ab5-4c66-8a1d-e0ffb17bda5b"), email = "sampleUser2@mail.com", imageId = new Guid("1713b227-ffb6-4c8e-8247-84be15928f4c"), isUser = true, password = "defd7d850c9632421ba1244bc22642facdc2115c60dbd0d2663b1117ba4f50a9", username = "sampleUser2" },
                        new { Id = new Guid("d2f23741-7b74-4b39-b28d-42172eb04420"), email = "sampleUser3@mail.com", imageId = new Guid("bcf316fa-dc18-4b8b-9090-f08c476ff85c"), isUser = true, password = "d4481413102ca87dc30943994469caad1ab2de1b869514348b003553bde4d3b1", username = "sampleUser3" },
                        new { Id = new Guid("22a187d3-9985-4b5d-bcd7-4f6c8843053a"), email = "sampleUser4@mail.com", imageId = new Guid("833fee49-3a76-47c8-b5cf-40c57611f77f"), isUser = false, password = "4d5c81c22882ff79cc1c45031acd9afcd1cf063f9b6d664adb1d33cf4c681807", username = "sampleUser4" },
                        new { Id = new Guid("888e8504-9287-4ad1-a984-dfe2d91ff32b"), email = "sampleUser5@mail.com", imageId = new Guid("178a0435-7822-42c8-9c7f-9199f9b5a09e"), isUser = false, password = "cc6b98042e62e0c4da7110a42dcd7aaf20ec2bbc250b89923353d39483ef46a4", username = "sampleUser5" }
                    );
                });

            modelBuilder.Entity("CharityData.Models.Action", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("actionType");

                    b.Property<DateTime>("creationDateTime");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime>("endDateTime");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<Guid>("organizationId");

                    b.Property<DateTime>("startDateTime");

                    b.HasKey("Id");

                    b.ToTable("action");

                    b.HasData(
                        new { Id = new Guid("08e37fa3-98c0-4220-b632-987e4c37131a"), actionType = false, creationDateTime = new DateTime(2019, 11, 27, 19, 32, 0, 0, DateTimeKind.Unspecified), description = "This is a generic action where you sign up to participate", endDateTime = new DateTime(2020, 2, 5, 19, 32, 0, 0, DateTimeKind.Unspecified), name = "Race for cure", organizationId = new Guid("f1a17f5b-f1f0-49eb-a3d3-439e72f90702"), startDateTime = new DateTime(2019, 11, 27, 19, 32, 0, 0, DateTimeKind.Unspecified) },
                        new { Id = new Guid("cfa621ba-af9a-4841-91c3-faf453759c25"), actionType = true, creationDateTime = new DateTime(2019, 11, 27, 19, 32, 0, 0, DateTimeKind.Unspecified), description = "This is a generic action where people donate stuff", endDateTime = new DateTime(2020, 2, 5, 19, 32, 0, 0, DateTimeKind.Unspecified), name = "Fundraising for children without parents", organizationId = new Guid("f1a17f5b-f1f0-49eb-a3d3-439e72f90702"), startDateTime = new DateTime(2019, 11, 27, 19, 32, 0, 0, DateTimeKind.Unspecified) },
                        new { Id = new Guid("dd9e6842-c122-4eec-aa93-c327fb48532b"), actionType = true, creationDateTime = new DateTime(2019, 11, 27, 19, 32, 0, 0, DateTimeKind.Unspecified), description = "This is another action where people donate stuff", endDateTime = new DateTime(2020, 2, 5, 19, 32, 0, 0, DateTimeKind.Unspecified), name = "Another fundraising", organizationId = new Guid("040fc5b6-f94b-4079-8b98-0298a59ae07f"), startDateTime = new DateTime(2019, 11, 27, 19, 32, 0, 0, DateTimeKind.Unspecified) }
                    );
                });

            modelBuilder.Entity("CharityData.Models.Card", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("amount");

                    b.Property<string>("bankName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("creditCardNumber")
                        .IsRequired();

                    b.Property<DateTime>("dateOfExpiry");

                    b.HasKey("Id");

                    b.ToTable("card");

                    b.HasData(
                        new { Id = new Guid("2184a6fe-1ee2-482c-9002-4016fd6375cd"), amount = 100.0, bankName = "Karntner Sparkasse", creditCardNumber = "1234567891011121", dateOfExpiry = new DateTime(2020, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Id = new Guid("b34dea03-3805-424a-95c8-c8c777fa4570"), amount = 50.0, bankName = "Karntner Sparkasse", creditCardNumber = "3141516171819202", dateOfExpiry = new DateTime(2021, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Id = new Guid("1d391b65-974c-482e-9084-f85272e12765"), amount = 150.0, bankName = "Karntner Ladesbank Raiffeisen", creditCardNumber = "1222324252627282", dateOfExpiry = new DateTime(2020, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Id = new Guid("bd6cd9f7-cdbc-40e0-a0e8-ebc03309f615"), amount = 200.0, bankName = "Austria Bank", creditCardNumber = "9303132333435363", dateOfExpiry = new DateTime(2021, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Id = new Guid("bdc3d82a-6616-401a-9050-f908ee557c51"), amount = 55.0, bankName = "Austria Bank", creditCardNumber = "7383940414243444", dateOfExpiry = new DateTime(2020, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified) }
                    );
                });

            modelBuilder.Entity("CharityData.Models.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Path");

                    b.HasKey("Id");

                    b.ToTable("image");

                    b.HasData(
                        new { Id = new Guid("bcf0ffae-1f10-4d24-8baa-84cb11442f52"), Path = "https://i.pinimg.com/originals/df/bd/df/dfbddf7c530ab5f4cd70154409651f9d.jpg" },
                        new { Id = new Guid("1713b227-ffb6-4c8e-8247-84be15928f4c"), Path = "http://bestdayevereducation.com/uploads/images/FreeVector-Spongebob-Squarepants-Vector.jpg" },
                        new { Id = new Guid("bcf316fa-dc18-4b8b-9090-f08c476ff85c"), Path = "https://arc-anglerfish-arc2-prod-elcomercio.s3.amazonaws.com/public/AVA6IKPJNBAS7JZ3CREUNY64K4.jpg" },
                        new { Id = new Guid("833fee49-3a76-47c8-b5cf-40c57611f77f"), Path = "https://upload.wikimedia.org/wikipedia/commons/thumb/8/80/Cartoon_Network_2010_logo.svg/2000px-Cartoon_Network_2010_logo.svg.png" },
                        new { Id = new Guid("178a0435-7822-42c8-9c7f-9199f9b5a09e"), Path = "https://cdn.vox-cdn.com/thumbor/m6_h4h6uHuJeZCnWTCz7anTlVJA=/0x0:1920x1080/1200x800/filters:focal(807x387:1113x693)/cdn.vox-cdn.com/uploads/chorus_image/image/60720529/disneyplus.0.4.jpg" }
                    );
                });

            modelBuilder.Entity("CharityData.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("description")
                        .HasMaxLength(200);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<Guid>("userDonatedId");

                    b.Property<int>("value");

                    b.HasKey("Id");

                    b.ToTable("item");

                    b.HasData(
                        new { Id = new Guid("b5e6b0e9-b052-434e-bef4-04215e9d687a"), description = "A ball for playing basketball", name = "Basketball", userDonatedId = new Guid("3c791c17-e88e-4f49-a287-2e9fc1f802af"), value = 50 },
                        new { Id = new Guid("1cf47408-cc50-4162-83be-e27030f44451"), description = "Some spare makeup I donate", name = "Makeup", userDonatedId = new Guid("f2de65ee-3520-47ff-866f-4c4d02e0cc09"), value = 150 }
                    );
                });

            modelBuilder.Entity("CharityData.Models.ItemInAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("actionId");

                    b.Property<Guid>("itemId");

                    b.HasKey("Id");

                    b.ToTable("itemInAction");

                    b.HasData(
                        new { Id = new Guid("450a2c0f-55e9-4c85-b6f1-02b7e1536b45"), actionId = new Guid("cfa621ba-af9a-4841-91c3-faf453759c25"), itemId = new Guid("b5e6b0e9-b052-434e-bef4-04215e9d687a") },
                        new { Id = new Guid("ba187e42-7178-44f9-a63a-1d57658ae295"), actionId = new Guid("cfa621ba-af9a-4841-91c3-faf453759c25"), itemId = new Guid("b5e6b0e9-b052-434e-bef4-04215e9d687a") },
                        new { Id = new Guid("038a7998-a85e-4bb0-9774-e1e9f631cf2b"), actionId = new Guid("dd9e6842-c122-4eec-aa93-c327fb48532b"), itemId = new Guid("1cf47408-cc50-4162-83be-e27030f44451") }
                    );
                });

            modelBuilder.Entity("CharityData.Models.Messages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("message")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<Guid>("organizationReceiverId");

                    b.Property<Guid>("organizationSenderId");

                    b.Property<DateTime>("sendingTime");

                    b.Property<Guid>("userReceiverId");

                    b.Property<Guid>("userSenderId");

                    b.HasKey("Id");

                    b.ToTable("message");

                    b.HasData(
                        new { Id = new Guid("803e9b62-4b01-421a-8d3e-963e7c14e9dd"), message = "May I participate in your action :)", organizationReceiverId = new Guid("f1a17f5b-f1f0-49eb-a3d3-439e72f90702"), organizationSenderId = new Guid("00000000-0000-0000-0000-000000000000"), sendingTime = new DateTime(2019, 11, 20, 22, 24, 30, 0, DateTimeKind.Unspecified), userReceiverId = new Guid("00000000-0000-0000-0000-000000000000"), userSenderId = new Guid("3c791c17-e88e-4f49-a287-2e9fc1f802af") },
                        new { Id = new Guid("3ad3d982-1bd7-4a98-9559-e1d45f9846a5"), message = "Of course you can. All the best.", organizationReceiverId = new Guid("00000000-0000-0000-0000-000000000000"), organizationSenderId = new Guid("f1a17f5b-f1f0-49eb-a3d3-439e72f90702"), sendingTime = new DateTime(2019, 11, 20, 23, 25, 30, 0, DateTimeKind.Unspecified), userReceiverId = new Guid("3c791c17-e88e-4f49-a287-2e9fc1f802af"), userSenderId = new Guid("00000000-0000-0000-0000-000000000000") },
                        new { Id = new Guid("e2b7a97c-8284-4643-bde8-b3f079ccec47"), message = "How are you my friend?", organizationReceiverId = new Guid("00000000-0000-0000-0000-000000000000"), organizationSenderId = new Guid("00000000-0000-0000-0000-000000000000"), sendingTime = new DateTime(2019, 10, 15, 20, 0, 0, 0, DateTimeKind.Unspecified), userReceiverId = new Guid("ee1c06e6-7537-4d3a-9084-27e2653e26b8"), userSenderId = new Guid("f2de65ee-3520-47ff-866f-4c4d02e0cc09") },
                        new { Id = new Guid("51038d49-7362-420b-a04a-279790b454d9"), message = "All is well, thank you, and you?", organizationReceiverId = new Guid("00000000-0000-0000-0000-000000000000"), organizationSenderId = new Guid("00000000-0000-0000-0000-000000000000"), sendingTime = new DateTime(2019, 10, 15, 21, 0, 0, 0, DateTimeKind.Unspecified), userReceiverId = new Guid("f2de65ee-3520-47ff-866f-4c4d02e0cc09"), userSenderId = new Guid("ee1c06e6-7537-4d3a-9084-27e2653e26b8") },
                        new { Id = new Guid("d247e17e-f121-49b9-ba31-954a818b3fdc"), message = "I am fine, thanks", organizationReceiverId = new Guid("00000000-0000-0000-0000-000000000000"), organizationSenderId = new Guid("00000000-0000-0000-0000-000000000000"), sendingTime = new DateTime(2019, 10, 15, 22, 0, 0, 0, DateTimeKind.Unspecified), userReceiverId = new Guid("ee1c06e6-7537-4d3a-9084-27e2653e26b8"), userSenderId = new Guid("f2de65ee-3520-47ff-866f-4c4d02e0cc09") }
                    );
                });

            modelBuilder.Entity("CharityData.Models.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("UserAccount");

                    b.Property<Guid>("creditCardNumber");

                    b.Property<DateTime>("dateOfFounding");

                    b.Property<string>("description")
                        .HasMaxLength(200);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("organization");

                    b.HasData(
                        new { Id = new Guid("f1a17f5b-f1f0-49eb-a3d3-439e72f90702"), UserAccount = new Guid("22a187d3-9985-4b5d-bcd7-4f6c8843053a"), creditCardNumber = new Guid("bd6cd9f7-cdbc-40e0-a0e8-ebc03309f615"), dateOfFounding = new DateTime(2015, 5, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), description = "This is a sample organization for doing something which is good", name = "CharityOrg1" },
                        new { Id = new Guid("040fc5b6-f94b-4079-8b98-0298a59ae07f"), UserAccount = new Guid("888e8504-9287-4ad1-a984-dfe2d91ff32b"), creditCardNumber = new Guid("bdc3d82a-6616-401a-9050-f908ee557c51"), dateOfFounding = new DateTime(2019, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), description = "This organization does charity actions which are great!", name = "CharityOrg2" }
                    );
                });

            modelBuilder.Entity("CharityData.Models.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("amount");

                    b.Property<Guid>("organizationReceiverId");

                    b.Property<Guid>("userSenderId");

                    b.HasKey("Id");

                    b.ToTable("payment");

                    b.HasData(
                        new { Id = new Guid("af9e127a-329c-4c7b-a28c-bb9c4193d6a0"), amount = 100.0, organizationReceiverId = new Guid("f1a17f5b-f1f0-49eb-a3d3-439e72f90702"), userSenderId = new Guid("3c791c17-e88e-4f49-a287-2e9fc1f802af") },
                        new { Id = new Guid("346d4e57-4185-4d20-8315-a487f54bb378"), amount = 100.0, organizationReceiverId = new Guid("040fc5b6-f94b-4079-8b98-0298a59ae07f"), userSenderId = new Guid("3c791c17-e88e-4f49-a287-2e9fc1f802af") },
                        new { Id = new Guid("e5e4fbcd-4dce-419b-9f8f-f269fcd1fe3f"), amount = 100.0, organizationReceiverId = new Guid("f1a17f5b-f1f0-49eb-a3d3-439e72f90702"), userSenderId = new Guid("f2de65ee-3520-47ff-866f-4c4d02e0cc09") }
                    );
                });

            modelBuilder.Entity("CharityData.Models.ProfilePosts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("actionId");

                    b.Property<string>("message")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<Guid>("userId");

                    b.HasKey("Id");

                    b.ToTable("profilePosts");

                    b.HasData(
                        new { Id = new Guid("fc46cac9-f244-4cd4-a986-8b2a0700680c"), actionId = new Guid("08e37fa3-98c0-4220-b632-987e4c37131a"), message = "I just did something in this action", userId = new Guid("3c791c17-e88e-4f49-a287-2e9fc1f802af") },
                        new { Id = new Guid("229379a4-d697-498b-a9af-5bf4e645d88a"), actionId = new Guid("cfa621ba-af9a-4841-91c3-faf453759c25"), message = "I did something too", userId = new Guid("f2de65ee-3520-47ff-866f-4c4d02e0cc09") },
                        new { Id = new Guid("5c4f4b15-f208-4aa1-8d80-58ea901b10ce"), actionId = new Guid("dd9e6842-c122-4eec-aa93-c327fb48532b"), message = "Normally, I did as well.", userId = new Guid("ee1c06e6-7537-4d3a-9084-27e2653e26b8") }
                    );
                });

            modelBuilder.Entity("CharityData.Models.ReactionsToPosts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("commentText");

                    b.Property<bool>("commented");

                    b.Property<bool>("liked");

                    b.Property<Guid>("postId");

                    b.Property<Guid>("userReactedId");

                    b.HasKey("Id");

                    b.ToTable("reactionsToPosts");

                    b.HasData(
                        new { Id = new Guid("c9d9c4eb-dce3-4867-9932-e3f37b15933f"), commented = false, liked = true, postId = new Guid("fc46cac9-f244-4cd4-a986-8b2a0700680c"), userReactedId = new Guid("ee1c06e6-7537-4d3a-9084-27e2653e26b8") },
                        new { Id = new Guid("559053ca-1373-4c63-94a5-f547e0713fb2"), commentText = "Glad you did that!", commented = true, liked = true, postId = new Guid("229379a4-d697-498b-a9af-5bf4e645d88a"), userReactedId = new Guid("3c791c17-e88e-4f49-a287-2e9fc1f802af") },
                        new { Id = new Guid("5f411452-0340-482c-98a2-cbdffd04939e"), commented = false, liked = true, postId = new Guid("5c4f4b15-f208-4aa1-8d80-58ea901b10ce"), userReactedId = new Guid("f2de65ee-3520-47ff-866f-4c4d02e0cc09") }
                    );
                });

            modelBuilder.Entity("CharityData.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("UserAccount");

                    b.Property<Guid>("creditCardId");

                    b.Property<DateTime>("dateOfBirth");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("user");

                    b.HasData(
                        new { Id = new Guid("3c791c17-e88e-4f49-a287-2e9fc1f802af"), UserAccount = new Guid("e7146b70-ad4d-4d28-ba0c-c420b18c14cc"), creditCardId = new Guid("2184a6fe-1ee2-482c-9002-4016fd6375cd"), dateOfBirth = new DateTime(1997, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), firstName = "Foo", gender = "M", lastName = "Bar" },
                        new { Id = new Guid("f2de65ee-3520-47ff-866f-4c4d02e0cc09"), UserAccount = new Guid("68984eae-1ab5-4c66-8a1d-e0ffb17bda5b"), creditCardId = new Guid("b34dea03-3805-424a-95c8-c8c777fa4570"), dateOfBirth = new DateTime(1980, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), firstName = "John", gender = "F", lastName = "Doe" },
                        new { Id = new Guid("ee1c06e6-7537-4d3a-9084-27e2653e26b8"), UserAccount = new Guid("d2f23741-7b74-4b39-b28d-42172eb04420"), creditCardId = new Guid("1d391b65-974c-482e-9084-f85272e12765"), dateOfBirth = new DateTime(1970, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), firstName = "Nicholas", gender = "M", lastName = "Cage" }
                    );
                });

            modelBuilder.Entity("CharityData.Models.UserParticipatingInAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("actionId");

                    b.Property<Guid>("userId");

                    b.HasKey("Id");

                    b.ToTable("userParticipatingInAction");

                    b.HasData(
                        new { Id = new Guid("42f92044-967c-4df1-af5d-673fc63c37ae"), actionId = new Guid("08e37fa3-98c0-4220-b632-987e4c37131a"), userId = new Guid("3c791c17-e88e-4f49-a287-2e9fc1f802af") },
                        new { Id = new Guid("cc44e437-575a-42eb-ab71-8a4d23991199"), actionId = new Guid("cfa621ba-af9a-4841-91c3-faf453759c25"), userId = new Guid("f2de65ee-3520-47ff-866f-4c4d02e0cc09") },
                        new { Id = new Guid("7e58c9db-4f5a-42d4-9c30-4c3508e18b40"), actionId = new Guid("dd9e6842-c122-4eec-aa93-c327fb48532b"), userId = new Guid("ee1c06e6-7537-4d3a-9084-27e2653e26b8") }
                    );
                });
#pragma warning restore 612, 618
        }
    }
}
