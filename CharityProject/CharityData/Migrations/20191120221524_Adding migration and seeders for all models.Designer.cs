// <auto-generated />
using System;
using CharityProject;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CharityData.Migrations
{
    [DbContext(typeof(CharityContext))]
    [Migration("20191120221524_Adding migration and seeders for all models")]
    partial class Addingmigrationandseedersforallmodels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CharityData.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("imageId");

                    b.Property<bool>("isUser");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("account");

                    b.HasData(
                        new { Id = new Guid("8ae15fe9-918f-4c6d-88d3-625ef29b7ba6"), imageId = new Guid("b79693eb-16b1-4df7-8a8e-de1d9ac4790b"), isUser = true, password = "samplepass1", username = "sampleUser1" },
                        new { Id = new Guid("860a538f-b18b-4ab7-a087-bc5ee9788794"), imageId = new Guid("26c16cbf-9fea-4e72-bd93-3244abdaa772"), isUser = true, password = "samplepass2", username = "sampleUser2" },
                        new { Id = new Guid("b4934321-8582-47cf-9efa-bcbeec7dfc33"), imageId = new Guid("cc0e125c-9fd8-4b29-ab79-63afab725bf6"), isUser = true, password = "samplepass3", username = "sampleUser3" },
                        new { Id = new Guid("7aeddfaa-8322-4f4f-9e75-b25ce00c3c8b"), imageId = new Guid("bab0b427-eda2-491d-b860-4776a8e7c3a3"), isUser = false, password = "samplepass4", username = "sampleUser4" },
                        new { Id = new Guid("d65bacd6-1cc6-4c28-b156-f2af70e0541d"), imageId = new Guid("9806d066-c0fe-4251-8517-1f8ce94571c4"), isUser = false, password = "samplepass5", username = "sampleUser5" }
                    );
                });

            modelBuilder.Entity("CharityData.Models.Action", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("actionType");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<Guid>("organizationId");

                    b.HasKey("Id");

                    b.ToTable("action");

                    b.HasData(
                        new { Id = new Guid("66f07ce4-d088-43b5-88a8-a421d4868c15"), actionType = false, description = "This is a generic action where you sign up to participate", name = "Race for cure", organizationId = new Guid("b636b6a1-541f-49d0-bdf6-86d3178b0244") },
                        new { Id = new Guid("090fdc74-724a-4857-a086-33c4c81f75ad"), actionType = true, description = "This is a generic action where people donate stuff", name = "Fundraising for children without parents", organizationId = new Guid("b636b6a1-541f-49d0-bdf6-86d3178b0244") },
                        new { Id = new Guid("433dfd43-d513-44ed-996b-60b04489183c"), actionType = true, description = "This is another action where people donate stuff", name = "Another fundraising", organizationId = new Guid("a82fc791-aba1-438d-9edb-5d3bb6f214dc") }
                    );
                });

            modelBuilder.Entity("CharityData.Models.Card", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("bankName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("dateOfExpiry");

                    b.HasKey("Id");

                    b.ToTable("card");

                    b.HasData(
                        new { Id = new Guid("8db7c482-021d-4a19-af47-a2091f675701"), bankName = "Karntner Sparkasse", dateOfExpiry = new DateTime(2020, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Id = new Guid("8e240754-b08e-4b04-8ece-780e8d58cb1b"), bankName = "Karntner Sparkasse", dateOfExpiry = new DateTime(2021, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Id = new Guid("7c238eb6-2fca-43d3-bca0-7dcf0268e92c"), bankName = "Karntner Ladesbank Raiffeisen", dateOfExpiry = new DateTime(2020, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Id = new Guid("53acdc31-facc-40d8-a3e3-3e29faa26725"), bankName = "Austria Bank", dateOfExpiry = new DateTime(2021, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Id = new Guid("e722111a-3b2f-410b-8e1b-1874b25e8ed2"), bankName = "Austria Bank", dateOfExpiry = new DateTime(2020, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified) }
                    );
                });

            modelBuilder.Entity("CharityData.Models.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Path");

                    b.HasKey("Id");

                    b.ToTable("image");

                    b.HasData(
                        new { Id = new Guid("b79693eb-16b1-4df7-8a8e-de1d9ac4790b"), Path = "https://i.pinimg.com/originals/df/bd/df/dfbddf7c530ab5f4cd70154409651f9d.jpg" },
                        new { Id = new Guid("26c16cbf-9fea-4e72-bd93-3244abdaa772"), Path = "http://bestdayevereducation.com/uploads/images/FreeVector-Spongebob-Squarepants-Vector.jpg" },
                        new { Id = new Guid("cc0e125c-9fd8-4b29-ab79-63afab725bf6"), Path = "https://arc-anglerfish-arc2-prod-elcomercio.s3.amazonaws.com/public/AVA6IKPJNBAS7JZ3CREUNY64K4.jpg" },
                        new { Id = new Guid("bab0b427-eda2-491d-b860-4776a8e7c3a3"), Path = "https://upload.wikimedia.org/wikipedia/commons/thumb/8/80/Cartoon_Network_2010_logo.svg/2000px-Cartoon_Network_2010_logo.svg.png" },
                        new { Id = new Guid("9806d066-c0fe-4251-8517-1f8ce94571c4"), Path = "https://cdn.vox-cdn.com/thumbor/m6_h4h6uHuJeZCnWTCz7anTlVJA=/0x0:1920x1080/1200x800/filters:focal(807x387:1113x693)/cdn.vox-cdn.com/uploads/chorus_image/image/60720529/disneyplus.0.4.jpg" }
                    );
                });

            modelBuilder.Entity("CharityData.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("description")
                        .HasMaxLength(200);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<Guid>("userDonatedId");

                    b.Property<int>("value");

                    b.HasKey("Id");

                    b.ToTable("item");

                    b.HasData(
                        new { Id = new Guid("bb29bd97-f582-4e23-9d9d-5d3e1ee5b6d3"), description = "A ball for playing basketball", name = "Basketball", userDonatedId = new Guid("f5e20a12-5f25-4177-9d3a-e3783319d6a6"), value = 50 },
                        new { Id = new Guid("3f2e29bc-3014-4c1d-b1c2-39b4913af56e"), description = "Some spare makeup I donate", name = "Makeup", userDonatedId = new Guid("75da4ab5-1c03-48ed-8bfd-a3b19f9fdda5"), value = 150 }
                    );
                });

            modelBuilder.Entity("CharityData.Models.ItemInAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("actionId");

                    b.Property<Guid>("itemId");

                    b.HasKey("Id");

                    b.ToTable("itemInAction");

                    b.HasData(
                        new { Id = new Guid("bae3e62c-88c5-4948-8346-bb14a6dc74a7"), actionId = new Guid("090fdc74-724a-4857-a086-33c4c81f75ad"), itemId = new Guid("bb29bd97-f582-4e23-9d9d-5d3e1ee5b6d3") },
                        new { Id = new Guid("72ef8d6e-c1e7-494e-be93-7c27388f90ab"), actionId = new Guid("090fdc74-724a-4857-a086-33c4c81f75ad"), itemId = new Guid("bb29bd97-f582-4e23-9d9d-5d3e1ee5b6d3") },
                        new { Id = new Guid("59060235-aa47-4110-acfc-8b99d6fce99a"), actionId = new Guid("433dfd43-d513-44ed-996b-60b04489183c"), itemId = new Guid("3f2e29bc-3014-4c1d-b1c2-39b4913af56e") }
                    );
                });

            modelBuilder.Entity("CharityData.Models.Messages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("message")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<Guid>("organizationReceiverId");

                    b.Property<Guid>("organizationSenderId");

                    b.Property<DateTime>("sendingTime");

                    b.Property<Guid>("userReceiverId");

                    b.Property<Guid>("userSenderId");

                    b.HasKey("Id");

                    b.ToTable("message");

                    b.HasData(
                        new { Id = new Guid("fb57594f-1b62-4614-ae41-813dc0e5de80"), message = "May I participate in your action :)", organizationReceiverId = new Guid("b636b6a1-541f-49d0-bdf6-86d3178b0244"), organizationSenderId = new Guid("00000000-0000-0000-0000-000000000000"), sendingTime = new DateTime(2019, 11, 20, 22, 24, 30, 0, DateTimeKind.Unspecified), userReceiverId = new Guid("00000000-0000-0000-0000-000000000000"), userSenderId = new Guid("f5e20a12-5f25-4177-9d3a-e3783319d6a6") },
                        new { Id = new Guid("c6c0b429-b345-4b39-baec-fbfb445c8ae9"), message = "Of course you can. All the best.", organizationReceiverId = new Guid("00000000-0000-0000-0000-000000000000"), organizationSenderId = new Guid("b636b6a1-541f-49d0-bdf6-86d3178b0244"), sendingTime = new DateTime(2019, 11, 20, 23, 25, 30, 0, DateTimeKind.Unspecified), userReceiverId = new Guid("f5e20a12-5f25-4177-9d3a-e3783319d6a6"), userSenderId = new Guid("00000000-0000-0000-0000-000000000000") },
                        new { Id = new Guid("2a0db98a-059f-4db5-b361-dccf46f72706"), message = "How are you my friend?", organizationReceiverId = new Guid("00000000-0000-0000-0000-000000000000"), organizationSenderId = new Guid("00000000-0000-0000-0000-000000000000"), sendingTime = new DateTime(2019, 10, 15, 20, 0, 0, 0, DateTimeKind.Unspecified), userReceiverId = new Guid("31a26eb4-4b3c-4b64-b8f8-00986fc35266"), userSenderId = new Guid("75da4ab5-1c03-48ed-8bfd-a3b19f9fdda5") },
                        new { Id = new Guid("91a39e60-3d64-4211-9558-16202391edff"), message = "All is well, thank you, and you?", organizationReceiverId = new Guid("00000000-0000-0000-0000-000000000000"), organizationSenderId = new Guid("00000000-0000-0000-0000-000000000000"), sendingTime = new DateTime(2019, 10, 15, 21, 0, 0, 0, DateTimeKind.Unspecified), userReceiverId = new Guid("75da4ab5-1c03-48ed-8bfd-a3b19f9fdda5"), userSenderId = new Guid("31a26eb4-4b3c-4b64-b8f8-00986fc35266") },
                        new { Id = new Guid("16b9f424-9ac8-4dc7-ae1c-7b0c2faf3318"), message = "I am fine, thanks", organizationReceiverId = new Guid("00000000-0000-0000-0000-000000000000"), organizationSenderId = new Guid("00000000-0000-0000-0000-000000000000"), sendingTime = new DateTime(2019, 10, 15, 22, 0, 0, 0, DateTimeKind.Unspecified), userReceiverId = new Guid("31a26eb4-4b3c-4b64-b8f8-00986fc35266"), userSenderId = new Guid("75da4ab5-1c03-48ed-8bfd-a3b19f9fdda5") }
                    );
                });

            modelBuilder.Entity("CharityData.Models.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("UserAccount");

                    b.Property<Guid>("creditCardNumber");

                    b.Property<DateTime>("dateOfFounding");

                    b.Property<string>("description")
                        .HasMaxLength(200);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("organization");

                    b.HasData(
                        new { Id = new Guid("b636b6a1-541f-49d0-bdf6-86d3178b0244"), UserAccount = new Guid("7aeddfaa-8322-4f4f-9e75-b25ce00c3c8b"), creditCardNumber = new Guid("53acdc31-facc-40d8-a3e3-3e29faa26725"), dateOfFounding = new DateTime(2015, 5, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), description = "This is a sample organization for doing something which is good", name = "CharityOrg1" },
                        new { Id = new Guid("a82fc791-aba1-438d-9edb-5d3bb6f214dc"), UserAccount = new Guid("d65bacd6-1cc6-4c28-b156-f2af70e0541d"), creditCardNumber = new Guid("e722111a-3b2f-410b-8e1b-1874b25e8ed2"), dateOfFounding = new DateTime(2019, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), description = "This organization does charity actions which are great!", name = "CharityOrg2" }
                    );
                });

            modelBuilder.Entity("CharityData.Models.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("amount");

                    b.Property<Guid>("organizationReceiverId");

                    b.Property<Guid>("userSenderId");

                    b.HasKey("Id");

                    b.ToTable("payment");

                    b.HasData(
                        new { Id = new Guid("580fb56e-dcce-4e03-a3d4-f644d3177b90"), amount = 100.0, organizationReceiverId = new Guid("b636b6a1-541f-49d0-bdf6-86d3178b0244"), userSenderId = new Guid("f5e20a12-5f25-4177-9d3a-e3783319d6a6") },
                        new { Id = new Guid("58c6d3ae-be28-4453-8293-90b6fab36532"), amount = 100.0, organizationReceiverId = new Guid("a82fc791-aba1-438d-9edb-5d3bb6f214dc"), userSenderId = new Guid("f5e20a12-5f25-4177-9d3a-e3783319d6a6") },
                        new { Id = new Guid("6c94aa1b-4920-478a-bced-c24086ea21b7"), amount = 100.0, organizationReceiverId = new Guid("b636b6a1-541f-49d0-bdf6-86d3178b0244"), userSenderId = new Guid("75da4ab5-1c03-48ed-8bfd-a3b19f9fdda5") }
                    );
                });

            modelBuilder.Entity("CharityData.Models.ProfilePosts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("actionId");

                    b.Property<string>("message")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<Guid>("userId");

                    b.HasKey("Id");

                    b.ToTable("profilePosts");

                    b.HasData(
                        new { Id = new Guid("eee07d64-fcc8-4103-a9d1-dda1350b0f0d"), actionId = new Guid("66f07ce4-d088-43b5-88a8-a421d4868c15"), message = "I just did something in this action", userId = new Guid("f5e20a12-5f25-4177-9d3a-e3783319d6a6") },
                        new { Id = new Guid("e61bff5f-626f-4b84-834a-792153336f0e"), actionId = new Guid("090fdc74-724a-4857-a086-33c4c81f75ad"), message = "I did something too", userId = new Guid("75da4ab5-1c03-48ed-8bfd-a3b19f9fdda5") },
                        new { Id = new Guid("e6b0310b-bd4c-470f-afd6-9502ad864347"), actionId = new Guid("433dfd43-d513-44ed-996b-60b04489183c"), message = "Normally, I did as well.", userId = new Guid("31a26eb4-4b3c-4b64-b8f8-00986fc35266") }
                    );
                });

            modelBuilder.Entity("CharityData.Models.ReactionsToPosts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("commented");

                    b.Property<bool>("liked");

                    b.Property<Guid>("postId");

                    b.Property<Guid>("userReactedId");

                    b.HasKey("Id");

                    b.ToTable("reactionsToPosts");

                    b.HasData(
                        new { Id = new Guid("18662e95-035f-42e3-8162-8f5266e17a91"), commented = false, liked = true, postId = new Guid("eee07d64-fcc8-4103-a9d1-dda1350b0f0d"), userReactedId = new Guid("31a26eb4-4b3c-4b64-b8f8-00986fc35266") },
                        new { Id = new Guid("d306a74a-1524-4c7c-93e0-5df9c40b24ec"), commented = true, liked = true, postId = new Guid("e61bff5f-626f-4b84-834a-792153336f0e"), userReactedId = new Guid("f5e20a12-5f25-4177-9d3a-e3783319d6a6") },
                        new { Id = new Guid("b2559667-80be-48e3-9eff-8a7e138606c0"), commented = false, liked = true, postId = new Guid("e6b0310b-bd4c-470f-afd6-9502ad864347"), userReactedId = new Guid("75da4ab5-1c03-48ed-8bfd-a3b19f9fdda5") }
                    );
                });

            modelBuilder.Entity("CharityData.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("UserAccount");

                    b.Property<Guid>("creditCardId");

                    b.Property<DateTime>("dateOfBirth");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("user");

                    b.HasData(
                        new { Id = new Guid("f5e20a12-5f25-4177-9d3a-e3783319d6a6"), UserAccount = new Guid("8ae15fe9-918f-4c6d-88d3-625ef29b7ba6"), creditCardId = new Guid("8db7c482-021d-4a19-af47-a2091f675701"), dateOfBirth = new DateTime(1997, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), firstName = "Foo", lastName = "Bar" },
                        new { Id = new Guid("75da4ab5-1c03-48ed-8bfd-a3b19f9fdda5"), UserAccount = new Guid("860a538f-b18b-4ab7-a087-bc5ee9788794"), creditCardId = new Guid("8e240754-b08e-4b04-8ece-780e8d58cb1b"), dateOfBirth = new DateTime(1980, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), firstName = "John", lastName = "Doe" },
                        new { Id = new Guid("31a26eb4-4b3c-4b64-b8f8-00986fc35266"), UserAccount = new Guid("b4934321-8582-47cf-9efa-bcbeec7dfc33"), creditCardId = new Guid("7c238eb6-2fca-43d3-bca0-7dcf0268e92c"), dateOfBirth = new DateTime(1970, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), firstName = "Nicholas", lastName = "Cage" }
                    );
                });

            modelBuilder.Entity("CharityData.Models.UserParticipatingInAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("actionId");

                    b.Property<Guid>("userId");

                    b.HasKey("Id");

                    b.ToTable("userParticipatingInAction");

                    b.HasData(
                        new { Id = new Guid("21365611-7f2f-47b0-8890-5bdd43bcf04a"), actionId = new Guid("66f07ce4-d088-43b5-88a8-a421d4868c15"), userId = new Guid("f5e20a12-5f25-4177-9d3a-e3783319d6a6") },
                        new { Id = new Guid("baebd90e-69ef-42c5-8843-55e212008241"), actionId = new Guid("090fdc74-724a-4857-a086-33c4c81f75ad"), userId = new Guid("75da4ab5-1c03-48ed-8bfd-a3b19f9fdda5") },
                        new { Id = new Guid("e6c870d0-8edf-42ba-b58a-346c8e18fb75"), actionId = new Guid("433dfd43-d513-44ed-996b-60b04489183c"), userId = new Guid("31a26eb4-4b3c-4b64-b8f8-00986fc35266") }
                    );
                });
#pragma warning restore 612, 618
        }
    }
}
