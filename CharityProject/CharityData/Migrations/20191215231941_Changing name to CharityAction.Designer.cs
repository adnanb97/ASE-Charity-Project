// <auto-generated />
using System;
using CharityProject;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CharityData.Migrations
{
    [DbContext(typeof(CharityContext))]
    [Migration("20191215231941_Changing name to CharityAction")]
    partial class ChangingnametoCharityAction
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CharityData.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("email");

                    b.Property<Guid>("imageId");

                    b.Property<bool>("isUser");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("account");

                    b.HasData(
                        new { Id = new Guid("87bc4eee-eb63-4dc1-b85e-5ad9d4d31062"), email = "sampleUser1@mail.com", imageId = new Guid("351adfb5-c6c0-441b-a3d7-3397160f301d"), isUser = true, password = "c72a944b810cb996c3107ae0a774980f1e4ec1232990a3c62a73c750675bcd5d", username = "sampleUser1" },
                        new { Id = new Guid("c3c6d77b-83af-44ec-a282-bd2d3d234014"), email = "sampleUser2@mail.com", imageId = new Guid("ddc0e647-ca5a-4379-8ea1-fc803958a760"), isUser = true, password = "defd7d850c9632421ba1244bc22642facdc2115c60dbd0d2663b1117ba4f50a9", username = "sampleUser2" },
                        new { Id = new Guid("a1095b75-9014-4f34-8bae-2278ce3ce3bd"), email = "sampleUser3@mail.com", imageId = new Guid("f6c2228e-fe6e-483a-a41c-6984f8ab06d8"), isUser = true, password = "d4481413102ca87dc30943994469caad1ab2de1b869514348b003553bde4d3b1", username = "sampleUser3" },
                        new { Id = new Guid("40a27398-27f5-43b2-92a3-0de1e11dc3d6"), email = "sampleUser4@mail.com", imageId = new Guid("f4e8fc86-6532-422c-a3a9-2497ff9e0580"), isUser = false, password = "4d5c81c22882ff79cc1c45031acd9afcd1cf063f9b6d664adb1d33cf4c681807", username = "sampleUser4" },
                        new { Id = new Guid("7a509ec5-20ec-4ae9-b5b4-5d92d0acba07"), email = "sampleUser5@mail.com", imageId = new Guid("44d3389a-1a41-4234-bc72-6ed8965790a8"), isUser = false, password = "cc6b98042e62e0c4da7110a42dcd7aaf20ec2bbc250b89923353d39483ef46a4", username = "sampleUser5" }
                    );
                });

            modelBuilder.Entity("CharityData.Models.Card", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("amount");

                    b.Property<string>("bankName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("creditCardNumber")
                        .IsRequired();

                    b.Property<DateTime>("dateOfExpiry");

                    b.HasKey("Id");

                    b.ToTable("card");

                    b.HasData(
                        new { Id = new Guid("ee7337bd-ba35-4e2f-ac10-facf2364ba42"), amount = 100.0, bankName = "Karntner Sparkasse", creditCardNumber = "1234567891011121", dateOfExpiry = new DateTime(2020, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Id = new Guid("8df97b0c-990d-4bb6-b047-e6824c9aa996"), amount = 50.0, bankName = "Karntner Sparkasse", creditCardNumber = "3141516171819202", dateOfExpiry = new DateTime(2021, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Id = new Guid("b1fb4138-3737-44e9-97eb-b23e040a23d2"), amount = 150.0, bankName = "Karntner Ladesbank Raiffeisen", creditCardNumber = "1222324252627282", dateOfExpiry = new DateTime(2020, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Id = new Guid("92a94df6-bedd-45f4-9017-bc2f52e3e8be"), amount = 200.0, bankName = "Austria Bank", creditCardNumber = "9303132333435363", dateOfExpiry = new DateTime(2021, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Id = new Guid("4fd45971-cfbb-45f2-a1ad-0294826cff45"), amount = 55.0, bankName = "Austria Bank", creditCardNumber = "7383940414243444", dateOfExpiry = new DateTime(2020, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified) }
                    );
                });

            modelBuilder.Entity("CharityData.Models.CharityAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("actionType");

                    b.Property<DateTime>("creationDateTime");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime>("endDateTime");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<Guid>("organizationId");

                    b.Property<DateTime>("startDateTime");

                    b.HasKey("Id");

                    b.ToTable("action");

                    b.HasData(
                        new { Id = new Guid("4be49861-6615-4a15-b2fb-c41db15a7844"), actionType = false, creationDateTime = new DateTime(2019, 12, 16, 0, 19, 40, 0, DateTimeKind.Unspecified), description = "This is a generic action where you sign up to participate", endDateTime = new DateTime(2020, 2, 5, 0, 19, 40, 0, DateTimeKind.Unspecified), name = "Race for cure", organizationId = new Guid("9df6c3dc-7b1a-44e5-9abc-fe154632de61"), startDateTime = new DateTime(2019, 12, 16, 0, 19, 40, 0, DateTimeKind.Unspecified) },
                        new { Id = new Guid("f8b8b854-6c91-40fc-b223-a2584a1136de"), actionType = true, creationDateTime = new DateTime(2019, 12, 16, 0, 19, 40, 0, DateTimeKind.Unspecified), description = "This is a generic action where people donate stuff", endDateTime = new DateTime(2020, 2, 5, 0, 19, 40, 0, DateTimeKind.Unspecified), name = "Fundraising for children without parents", organizationId = new Guid("9df6c3dc-7b1a-44e5-9abc-fe154632de61"), startDateTime = new DateTime(2019, 12, 16, 0, 19, 40, 0, DateTimeKind.Unspecified) },
                        new { Id = new Guid("bac49b04-61e1-4f94-b785-0856cd6b0c69"), actionType = true, creationDateTime = new DateTime(2019, 12, 16, 0, 19, 40, 0, DateTimeKind.Unspecified), description = "This is another action where people donate stuff", endDateTime = new DateTime(2020, 2, 5, 0, 19, 40, 0, DateTimeKind.Unspecified), name = "Another fundraising", organizationId = new Guid("87603e62-de5f-47ee-8783-297b3d08e78a"), startDateTime = new DateTime(2019, 12, 16, 0, 19, 40, 0, DateTimeKind.Unspecified) }
                    );
                });

            modelBuilder.Entity("CharityData.Models.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Path");

                    b.HasKey("Id");

                    b.ToTable("image");

                    b.HasData(
                        new { Id = new Guid("351adfb5-c6c0-441b-a3d7-3397160f301d"), Path = "https://i.pinimg.com/originals/df/bd/df/dfbddf7c530ab5f4cd70154409651f9d.jpg" },
                        new { Id = new Guid("ddc0e647-ca5a-4379-8ea1-fc803958a760"), Path = "http://bestdayevereducation.com/uploads/images/FreeVector-Spongebob-Squarepants-Vector.jpg" },
                        new { Id = new Guid("f6c2228e-fe6e-483a-a41c-6984f8ab06d8"), Path = "https://arc-anglerfish-arc2-prod-elcomercio.s3.amazonaws.com/public/AVA6IKPJNBAS7JZ3CREUNY64K4.jpg" },
                        new { Id = new Guid("f4e8fc86-6532-422c-a3a9-2497ff9e0580"), Path = "https://upload.wikimedia.org/wikipedia/commons/thumb/8/80/Cartoon_Network_2010_logo.svg/2000px-Cartoon_Network_2010_logo.svg.png" },
                        new { Id = new Guid("44d3389a-1a41-4234-bc72-6ed8965790a8"), Path = "https://cdn.vox-cdn.com/thumbor/m6_h4h6uHuJeZCnWTCz7anTlVJA=/0x0:1920x1080/1200x800/filters:focal(807x387:1113x693)/cdn.vox-cdn.com/uploads/chorus_image/image/60720529/disneyplus.0.4.jpg" }
                    );
                });

            modelBuilder.Entity("CharityData.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("description")
                        .HasMaxLength(200);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<Guid>("userDonatedId");

                    b.Property<int>("value");

                    b.HasKey("Id");

                    b.ToTable("item");

                    b.HasData(
                        new { Id = new Guid("78416ab0-88b9-43cb-92db-fc6645c20f38"), description = "A ball for playing basketball", name = "Basketball", userDonatedId = new Guid("e64a8937-90da-4689-8d55-dc6790765c1b"), value = 50 },
                        new { Id = new Guid("76fe674f-37ed-4f38-826d-0130ca5eb809"), description = "Some spare makeup I donate", name = "Makeup", userDonatedId = new Guid("7e1202f8-3b7c-459a-8800-5e56dea8d462"), value = 150 }
                    );
                });

            modelBuilder.Entity("CharityData.Models.ItemInAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("actionId");

                    b.Property<Guid>("itemId");

                    b.HasKey("Id");

                    b.ToTable("itemInAction");

                    b.HasData(
                        new { Id = new Guid("ad55cef8-0227-4b08-a3da-f03e69ebbbb0"), actionId = new Guid("f8b8b854-6c91-40fc-b223-a2584a1136de"), itemId = new Guid("78416ab0-88b9-43cb-92db-fc6645c20f38") },
                        new { Id = new Guid("9edbde5e-ab90-4e6e-b63b-a95161de3af4"), actionId = new Guid("f8b8b854-6c91-40fc-b223-a2584a1136de"), itemId = new Guid("78416ab0-88b9-43cb-92db-fc6645c20f38") },
                        new { Id = new Guid("20325563-7205-4698-be50-581d003054e1"), actionId = new Guid("bac49b04-61e1-4f94-b785-0856cd6b0c69"), itemId = new Guid("76fe674f-37ed-4f38-826d-0130ca5eb809") }
                    );
                });

            modelBuilder.Entity("CharityData.Models.Messages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("message")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<Guid>("organizationReceiverId");

                    b.Property<Guid>("organizationSenderId");

                    b.Property<DateTime>("sendingTime");

                    b.Property<Guid>("userReceiverId");

                    b.Property<Guid>("userSenderId");

                    b.HasKey("Id");

                    b.ToTable("message");

                    b.HasData(
                        new { Id = new Guid("d89e41a9-c06d-47ac-a03a-e9c66667f622"), message = "May I participate in your action :)", organizationReceiverId = new Guid("9df6c3dc-7b1a-44e5-9abc-fe154632de61"), organizationSenderId = new Guid("00000000-0000-0000-0000-000000000000"), sendingTime = new DateTime(2019, 11, 20, 22, 24, 30, 0, DateTimeKind.Unspecified), userReceiverId = new Guid("00000000-0000-0000-0000-000000000000"), userSenderId = new Guid("e64a8937-90da-4689-8d55-dc6790765c1b") },
                        new { Id = new Guid("20bffc3e-2bd2-418f-af96-727d7f92f963"), message = "Of course you can. All the best.", organizationReceiverId = new Guid("00000000-0000-0000-0000-000000000000"), organizationSenderId = new Guid("9df6c3dc-7b1a-44e5-9abc-fe154632de61"), sendingTime = new DateTime(2019, 11, 20, 23, 25, 30, 0, DateTimeKind.Unspecified), userReceiverId = new Guid("e64a8937-90da-4689-8d55-dc6790765c1b"), userSenderId = new Guid("00000000-0000-0000-0000-000000000000") },
                        new { Id = new Guid("f661044a-c082-4bd4-bbdc-98aa52bdf200"), message = "How are you my friend?", organizationReceiverId = new Guid("00000000-0000-0000-0000-000000000000"), organizationSenderId = new Guid("00000000-0000-0000-0000-000000000000"), sendingTime = new DateTime(2019, 10, 15, 20, 0, 0, 0, DateTimeKind.Unspecified), userReceiverId = new Guid("6807ffd4-1595-4678-8813-d3308efb2e2f"), userSenderId = new Guid("7e1202f8-3b7c-459a-8800-5e56dea8d462") },
                        new { Id = new Guid("7e387e54-0934-481b-a174-f614444cd3c5"), message = "All is well, thank you, and you?", organizationReceiverId = new Guid("00000000-0000-0000-0000-000000000000"), organizationSenderId = new Guid("00000000-0000-0000-0000-000000000000"), sendingTime = new DateTime(2019, 10, 15, 21, 0, 0, 0, DateTimeKind.Unspecified), userReceiverId = new Guid("7e1202f8-3b7c-459a-8800-5e56dea8d462"), userSenderId = new Guid("6807ffd4-1595-4678-8813-d3308efb2e2f") },
                        new { Id = new Guid("d55f331f-648a-411a-8bbf-8d90427e782b"), message = "I am fine, thanks", organizationReceiverId = new Guid("00000000-0000-0000-0000-000000000000"), organizationSenderId = new Guid("00000000-0000-0000-0000-000000000000"), sendingTime = new DateTime(2019, 10, 15, 22, 0, 0, 0, DateTimeKind.Unspecified), userReceiverId = new Guid("6807ffd4-1595-4678-8813-d3308efb2e2f"), userSenderId = new Guid("7e1202f8-3b7c-459a-8800-5e56dea8d462") }
                    );
                });

            modelBuilder.Entity("CharityData.Models.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("UserAccount");

                    b.Property<Guid>("creditCardNumber");

                    b.Property<DateTime>("dateOfFounding");

                    b.Property<string>("description")
                        .HasMaxLength(200);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("organization");

                    b.HasData(
                        new { Id = new Guid("9df6c3dc-7b1a-44e5-9abc-fe154632de61"), UserAccount = new Guid("40a27398-27f5-43b2-92a3-0de1e11dc3d6"), creditCardNumber = new Guid("92a94df6-bedd-45f4-9017-bc2f52e3e8be"), dateOfFounding = new DateTime(2015, 5, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), description = "This is a sample organization for doing something which is good", name = "CharityOrg1" },
                        new { Id = new Guid("87603e62-de5f-47ee-8783-297b3d08e78a"), UserAccount = new Guid("7a509ec5-20ec-4ae9-b5b4-5d92d0acba07"), creditCardNumber = new Guid("4fd45971-cfbb-45f2-a1ad-0294826cff45"), dateOfFounding = new DateTime(2019, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), description = "This organization does charity actions which are great!", name = "CharityOrg2" }
                    );
                });

            modelBuilder.Entity("CharityData.Models.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("amount");

                    b.Property<Guid>("organizationReceiverId");

                    b.Property<Guid>("userSenderId");

                    b.HasKey("Id");

                    b.ToTable("payment");

                    b.HasData(
                        new { Id = new Guid("7291e5b7-f939-4ab2-a93b-9f8e07790c6e"), amount = 100.0, organizationReceiverId = new Guid("9df6c3dc-7b1a-44e5-9abc-fe154632de61"), userSenderId = new Guid("e64a8937-90da-4689-8d55-dc6790765c1b") },
                        new { Id = new Guid("65fad5c7-f833-4e29-8a94-1a79eaa6320c"), amount = 100.0, organizationReceiverId = new Guid("87603e62-de5f-47ee-8783-297b3d08e78a"), userSenderId = new Guid("e64a8937-90da-4689-8d55-dc6790765c1b") },
                        new { Id = new Guid("28f51d1b-8fc7-4898-b98d-ec50f59497b2"), amount = 100.0, organizationReceiverId = new Guid("9df6c3dc-7b1a-44e5-9abc-fe154632de61"), userSenderId = new Guid("7e1202f8-3b7c-459a-8800-5e56dea8d462") }
                    );
                });

            modelBuilder.Entity("CharityData.Models.ProfilePosts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("actionId");

                    b.Property<string>("message")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<Guid>("userId");

                    b.HasKey("Id");

                    b.ToTable("profilePosts");

                    b.HasData(
                        new { Id = new Guid("8ceaeecc-5b92-45ce-9f35-53eb1e9659ad"), actionId = new Guid("4be49861-6615-4a15-b2fb-c41db15a7844"), message = "I just did something in this action", userId = new Guid("e64a8937-90da-4689-8d55-dc6790765c1b") },
                        new { Id = new Guid("74cdb43b-e00c-4aeb-8756-45eb4cdf8b0b"), actionId = new Guid("f8b8b854-6c91-40fc-b223-a2584a1136de"), message = "I did something too", userId = new Guid("7e1202f8-3b7c-459a-8800-5e56dea8d462") },
                        new { Id = new Guid("a2d14e65-72b0-4190-ae7b-02db8f244d70"), actionId = new Guid("bac49b04-61e1-4f94-b785-0856cd6b0c69"), message = "Normally, I did as well.", userId = new Guid("6807ffd4-1595-4678-8813-d3308efb2e2f") }
                    );
                });

            modelBuilder.Entity("CharityData.Models.ReactionsToPosts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("commentText");

                    b.Property<bool>("commented");

                    b.Property<bool>("liked");

                    b.Property<Guid>("postId");

                    b.Property<Guid>("userReactedId");

                    b.HasKey("Id");

                    b.ToTable("reactionsToPosts");

                    b.HasData(
                        new { Id = new Guid("6cd76c62-f915-4e4c-bf81-70fc81694af1"), commented = false, liked = true, postId = new Guid("8ceaeecc-5b92-45ce-9f35-53eb1e9659ad"), userReactedId = new Guid("6807ffd4-1595-4678-8813-d3308efb2e2f") },
                        new { Id = new Guid("326f27b6-b058-4664-8d77-b7803207ef21"), commentText = "Glad you did that!", commented = true, liked = true, postId = new Guid("74cdb43b-e00c-4aeb-8756-45eb4cdf8b0b"), userReactedId = new Guid("e64a8937-90da-4689-8d55-dc6790765c1b") },
                        new { Id = new Guid("1639ba9c-83d3-4d19-b30c-0bc3de0d93e2"), commented = false, liked = true, postId = new Guid("a2d14e65-72b0-4190-ae7b-02db8f244d70"), userReactedId = new Guid("7e1202f8-3b7c-459a-8800-5e56dea8d462") }
                    );
                });

            modelBuilder.Entity("CharityData.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("UserAccount");

                    b.Property<Guid>("creditCardId");

                    b.Property<DateTime>("dateOfBirth");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("user");

                    b.HasData(
                        new { Id = new Guid("e64a8937-90da-4689-8d55-dc6790765c1b"), UserAccount = new Guid("87bc4eee-eb63-4dc1-b85e-5ad9d4d31062"), creditCardId = new Guid("ee7337bd-ba35-4e2f-ac10-facf2364ba42"), dateOfBirth = new DateTime(1997, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), firstName = "Foo", gender = "M", lastName = "Bar" },
                        new { Id = new Guid("7e1202f8-3b7c-459a-8800-5e56dea8d462"), UserAccount = new Guid("c3c6d77b-83af-44ec-a282-bd2d3d234014"), creditCardId = new Guid("8df97b0c-990d-4bb6-b047-e6824c9aa996"), dateOfBirth = new DateTime(1980, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), firstName = "John", gender = "F", lastName = "Doe" },
                        new { Id = new Guid("6807ffd4-1595-4678-8813-d3308efb2e2f"), UserAccount = new Guid("a1095b75-9014-4f34-8bae-2278ce3ce3bd"), creditCardId = new Guid("b1fb4138-3737-44e9-97eb-b23e040a23d2"), dateOfBirth = new DateTime(1970, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), firstName = "Nicholas", gender = "M", lastName = "Cage" }
                    );
                });

            modelBuilder.Entity("CharityData.Models.UserParticipatingInAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("actionId");

                    b.Property<Guid>("userId");

                    b.HasKey("Id");

                    b.ToTable("userParticipatingInAction");

                    b.HasData(
                        new { Id = new Guid("a350ee65-9223-412c-85fc-cba4ccfe1c41"), actionId = new Guid("4be49861-6615-4a15-b2fb-c41db15a7844"), userId = new Guid("e64a8937-90da-4689-8d55-dc6790765c1b") },
                        new { Id = new Guid("bad43e16-56b1-4eef-9c0e-af37275e6ee6"), actionId = new Guid("f8b8b854-6c91-40fc-b223-a2584a1136de"), userId = new Guid("7e1202f8-3b7c-459a-8800-5e56dea8d462") },
                        new { Id = new Guid("b95f63ca-312e-425d-8ae1-7a398bb8df2c"), actionId = new Guid("bac49b04-61e1-4f94-b785-0856cd6b0c69"), userId = new Guid("6807ffd4-1595-4678-8813-d3308efb2e2f") }
                    );
                });
#pragma warning restore 612, 618
        }
    }
}
