// <auto-generated />
using System;
using CharityProject;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CharityData.Migrations
{
    [DbContext(typeof(CharityContext))]
    [Migration("20191121135328_Fixed migration for Post Reaction (no text when commenting) and User (Gender)")]
    partial class FixedmigrationforPostReactionnotextwhencommentingandUserGender
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CharityData.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("imageId");

                    b.Property<bool>("isUser");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("account");

                    b.HasData(
                        new { Id = new Guid("3a3c754a-07e2-4c14-96db-45cee559a474"), imageId = new Guid("a66bf0c0-2c93-492b-9513-186d9644eaf4"), isUser = true, password = "samplepass1", username = "sampleUser1" },
                        new { Id = new Guid("547a73f9-362d-4ca2-ad7c-65d7cb14d0d7"), imageId = new Guid("f58b66d5-fd23-4ff4-9023-f6b79a03f3b2"), isUser = true, password = "samplepass2", username = "sampleUser2" },
                        new { Id = new Guid("57aec4ab-79d6-4ca5-9a56-10e833d48921"), imageId = new Guid("e1960e5b-5c37-40b1-ba14-0af2ad8662cb"), isUser = true, password = "samplepass3", username = "sampleUser3" },
                        new { Id = new Guid("3534935d-6ed3-4736-9bc7-b21a1417cae1"), imageId = new Guid("d8f9fffb-e10b-4356-a12b-f24b4db5d937"), isUser = false, password = "samplepass4", username = "sampleUser4" },
                        new { Id = new Guid("e4400f56-a926-4d86-b3e9-9ac201f7eca7"), imageId = new Guid("0d689427-18d9-4c32-a72c-00155ac31fcf"), isUser = false, password = "samplepass5", username = "sampleUser5" }
                    );
                });

            modelBuilder.Entity("CharityData.Models.Action", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("actionType");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<Guid>("organizationId");

                    b.HasKey("Id");

                    b.ToTable("action");

                    b.HasData(
                        new { Id = new Guid("a0a29966-1c47-49bd-9f69-5eb5cd367472"), actionType = false, description = "This is a generic action where you sign up to participate", name = "Race for cure", organizationId = new Guid("9d339f07-7548-4d66-ad39-4886de3033dd") },
                        new { Id = new Guid("3af982da-a061-4cfc-84b9-1ecb6d929342"), actionType = true, description = "This is a generic action where people donate stuff", name = "Fundraising for children without parents", organizationId = new Guid("9d339f07-7548-4d66-ad39-4886de3033dd") },
                        new { Id = new Guid("ef83bf0b-fea0-411b-8fdd-1293aee8adb4"), actionType = true, description = "This is another action where people donate stuff", name = "Another fundraising", organizationId = new Guid("bade659a-e76d-4bba-bb59-358f293ed262") }
                    );
                });

            modelBuilder.Entity("CharityData.Models.Card", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("bankName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("dateOfExpiry");

                    b.HasKey("Id");

                    b.ToTable("card");

                    b.HasData(
                        new { Id = new Guid("0fc952ae-13f6-4161-aeb1-b9e040d8dce3"), bankName = "Karntner Sparkasse", dateOfExpiry = new DateTime(2020, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Id = new Guid("5f6efe01-ecba-4b20-a9ed-6049ae82b776"), bankName = "Karntner Sparkasse", dateOfExpiry = new DateTime(2021, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Id = new Guid("0511a552-89cd-41a3-a581-ea931327682d"), bankName = "Karntner Ladesbank Raiffeisen", dateOfExpiry = new DateTime(2020, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Id = new Guid("a333c0b5-ed74-48b9-905e-7f958ca55dfc"), bankName = "Austria Bank", dateOfExpiry = new DateTime(2021, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Id = new Guid("d89dcfaf-29cf-40a8-b627-5f62a1d507a2"), bankName = "Austria Bank", dateOfExpiry = new DateTime(2020, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified) }
                    );
                });

            modelBuilder.Entity("CharityData.Models.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Path");

                    b.HasKey("Id");

                    b.ToTable("image");

                    b.HasData(
                        new { Id = new Guid("a66bf0c0-2c93-492b-9513-186d9644eaf4"), Path = "https://i.pinimg.com/originals/df/bd/df/dfbddf7c530ab5f4cd70154409651f9d.jpg" },
                        new { Id = new Guid("f58b66d5-fd23-4ff4-9023-f6b79a03f3b2"), Path = "http://bestdayevereducation.com/uploads/images/FreeVector-Spongebob-Squarepants-Vector.jpg" },
                        new { Id = new Guid("e1960e5b-5c37-40b1-ba14-0af2ad8662cb"), Path = "https://arc-anglerfish-arc2-prod-elcomercio.s3.amazonaws.com/public/AVA6IKPJNBAS7JZ3CREUNY64K4.jpg" },
                        new { Id = new Guid("d8f9fffb-e10b-4356-a12b-f24b4db5d937"), Path = "https://upload.wikimedia.org/wikipedia/commons/thumb/8/80/Cartoon_Network_2010_logo.svg/2000px-Cartoon_Network_2010_logo.svg.png" },
                        new { Id = new Guid("0d689427-18d9-4c32-a72c-00155ac31fcf"), Path = "https://cdn.vox-cdn.com/thumbor/m6_h4h6uHuJeZCnWTCz7anTlVJA=/0x0:1920x1080/1200x800/filters:focal(807x387:1113x693)/cdn.vox-cdn.com/uploads/chorus_image/image/60720529/disneyplus.0.4.jpg" }
                    );
                });

            modelBuilder.Entity("CharityData.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("description")
                        .HasMaxLength(200);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<Guid>("userDonatedId");

                    b.Property<int>("value");

                    b.HasKey("Id");

                    b.ToTable("item");

                    b.HasData(
                        new { Id = new Guid("0d8c0f93-93a0-424a-9330-97be4bfd636b"), description = "A ball for playing basketball", name = "Basketball", userDonatedId = new Guid("02eefb58-88d5-466d-af8b-12faa98aecd1"), value = 50 },
                        new { Id = new Guid("4cc52e84-307c-454c-bf48-d2e44f042e61"), description = "Some spare makeup I donate", name = "Makeup", userDonatedId = new Guid("34a35df2-22c7-40f6-b302-caa4af4fece8"), value = 150 }
                    );
                });

            modelBuilder.Entity("CharityData.Models.ItemInAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("actionId");

                    b.Property<Guid>("itemId");

                    b.HasKey("Id");

                    b.ToTable("itemInAction");

                    b.HasData(
                        new { Id = new Guid("fbb21596-b09d-409c-812b-785912d57d33"), actionId = new Guid("3af982da-a061-4cfc-84b9-1ecb6d929342"), itemId = new Guid("0d8c0f93-93a0-424a-9330-97be4bfd636b") },
                        new { Id = new Guid("bd4faa4b-ad4f-4bb4-9740-6c8369c6bff3"), actionId = new Guid("3af982da-a061-4cfc-84b9-1ecb6d929342"), itemId = new Guid("0d8c0f93-93a0-424a-9330-97be4bfd636b") },
                        new { Id = new Guid("aec3727b-f38f-4f00-ae47-16e359ce7f94"), actionId = new Guid("ef83bf0b-fea0-411b-8fdd-1293aee8adb4"), itemId = new Guid("4cc52e84-307c-454c-bf48-d2e44f042e61") }
                    );
                });

            modelBuilder.Entity("CharityData.Models.Messages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("message")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<Guid>("organizationReceiverId");

                    b.Property<Guid>("organizationSenderId");

                    b.Property<DateTime>("sendingTime");

                    b.Property<Guid>("userReceiverId");

                    b.Property<Guid>("userSenderId");

                    b.HasKey("Id");

                    b.ToTable("message");

                    b.HasData(
                        new { Id = new Guid("5129e70f-d6bc-48a4-bc18-2ae38d449f0c"), message = "May I participate in your action :)", organizationReceiverId = new Guid("9d339f07-7548-4d66-ad39-4886de3033dd"), organizationSenderId = new Guid("00000000-0000-0000-0000-000000000000"), sendingTime = new DateTime(2019, 11, 20, 22, 24, 30, 0, DateTimeKind.Unspecified), userReceiverId = new Guid("00000000-0000-0000-0000-000000000000"), userSenderId = new Guid("02eefb58-88d5-466d-af8b-12faa98aecd1") },
                        new { Id = new Guid("32a708be-c99e-4f2f-8d43-d15ecb9e5c10"), message = "Of course you can. All the best.", organizationReceiverId = new Guid("00000000-0000-0000-0000-000000000000"), organizationSenderId = new Guid("9d339f07-7548-4d66-ad39-4886de3033dd"), sendingTime = new DateTime(2019, 11, 20, 23, 25, 30, 0, DateTimeKind.Unspecified), userReceiverId = new Guid("02eefb58-88d5-466d-af8b-12faa98aecd1"), userSenderId = new Guid("00000000-0000-0000-0000-000000000000") },
                        new { Id = new Guid("2fd75fd0-bc70-4d5e-b220-55420de49466"), message = "How are you my friend?", organizationReceiverId = new Guid("00000000-0000-0000-0000-000000000000"), organizationSenderId = new Guid("00000000-0000-0000-0000-000000000000"), sendingTime = new DateTime(2019, 10, 15, 20, 0, 0, 0, DateTimeKind.Unspecified), userReceiverId = new Guid("26482449-1b84-44ab-8ac5-27f8f1634f8c"), userSenderId = new Guid("34a35df2-22c7-40f6-b302-caa4af4fece8") },
                        new { Id = new Guid("44497540-08e1-4c82-bf00-fdb5fe07af53"), message = "All is well, thank you, and you?", organizationReceiverId = new Guid("00000000-0000-0000-0000-000000000000"), organizationSenderId = new Guid("00000000-0000-0000-0000-000000000000"), sendingTime = new DateTime(2019, 10, 15, 21, 0, 0, 0, DateTimeKind.Unspecified), userReceiverId = new Guid("34a35df2-22c7-40f6-b302-caa4af4fece8"), userSenderId = new Guid("26482449-1b84-44ab-8ac5-27f8f1634f8c") },
                        new { Id = new Guid("1b790cd1-13bd-4c3e-b3b2-b36af8f479c2"), message = "I am fine, thanks", organizationReceiverId = new Guid("00000000-0000-0000-0000-000000000000"), organizationSenderId = new Guid("00000000-0000-0000-0000-000000000000"), sendingTime = new DateTime(2019, 10, 15, 22, 0, 0, 0, DateTimeKind.Unspecified), userReceiverId = new Guid("26482449-1b84-44ab-8ac5-27f8f1634f8c"), userSenderId = new Guid("34a35df2-22c7-40f6-b302-caa4af4fece8") }
                    );
                });

            modelBuilder.Entity("CharityData.Models.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("UserAccount");

                    b.Property<Guid>("creditCardNumber");

                    b.Property<DateTime>("dateOfFounding");

                    b.Property<string>("description")
                        .HasMaxLength(200);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("organization");

                    b.HasData(
                        new { Id = new Guid("9d339f07-7548-4d66-ad39-4886de3033dd"), UserAccount = new Guid("3534935d-6ed3-4736-9bc7-b21a1417cae1"), creditCardNumber = new Guid("a333c0b5-ed74-48b9-905e-7f958ca55dfc"), dateOfFounding = new DateTime(2015, 5, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), description = "This is a sample organization for doing something which is good", name = "CharityOrg1" },
                        new { Id = new Guid("bade659a-e76d-4bba-bb59-358f293ed262"), UserAccount = new Guid("e4400f56-a926-4d86-b3e9-9ac201f7eca7"), creditCardNumber = new Guid("d89dcfaf-29cf-40a8-b627-5f62a1d507a2"), dateOfFounding = new DateTime(2019, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), description = "This organization does charity actions which are great!", name = "CharityOrg2" }
                    );
                });

            modelBuilder.Entity("CharityData.Models.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("amount");

                    b.Property<Guid>("organizationReceiverId");

                    b.Property<Guid>("userSenderId");

                    b.HasKey("Id");

                    b.ToTable("payment");

                    b.HasData(
                        new { Id = new Guid("31a2ce51-5f23-4981-a89f-dbae81664e9e"), amount = 100.0, organizationReceiverId = new Guid("9d339f07-7548-4d66-ad39-4886de3033dd"), userSenderId = new Guid("02eefb58-88d5-466d-af8b-12faa98aecd1") },
                        new { Id = new Guid("22a6c3d0-0682-43b8-b226-bfb92ab9a816"), amount = 100.0, organizationReceiverId = new Guid("bade659a-e76d-4bba-bb59-358f293ed262"), userSenderId = new Guid("02eefb58-88d5-466d-af8b-12faa98aecd1") },
                        new { Id = new Guid("9026f6cb-3f73-4d1e-ac83-75625a4f1a65"), amount = 100.0, organizationReceiverId = new Guid("9d339f07-7548-4d66-ad39-4886de3033dd"), userSenderId = new Guid("34a35df2-22c7-40f6-b302-caa4af4fece8") }
                    );
                });

            modelBuilder.Entity("CharityData.Models.ProfilePosts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("actionId");

                    b.Property<string>("message")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<Guid>("userId");

                    b.HasKey("Id");

                    b.ToTable("profilePosts");

                    b.HasData(
                        new { Id = new Guid("8316ddae-d339-48a1-93e7-20f006e4b343"), actionId = new Guid("a0a29966-1c47-49bd-9f69-5eb5cd367472"), message = "I just did something in this action", userId = new Guid("02eefb58-88d5-466d-af8b-12faa98aecd1") },
                        new { Id = new Guid("001a3141-0756-4cf2-aab0-d5b4a22ce612"), actionId = new Guid("3af982da-a061-4cfc-84b9-1ecb6d929342"), message = "I did something too", userId = new Guid("34a35df2-22c7-40f6-b302-caa4af4fece8") },
                        new { Id = new Guid("fb1c3b7c-35b0-425e-9622-6e3d353b29be"), actionId = new Guid("ef83bf0b-fea0-411b-8fdd-1293aee8adb4"), message = "Normally, I did as well.", userId = new Guid("26482449-1b84-44ab-8ac5-27f8f1634f8c") }
                    );
                });

            modelBuilder.Entity("CharityData.Models.ReactionsToPosts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("commentText");

                    b.Property<bool>("commented");

                    b.Property<bool>("liked");

                    b.Property<Guid>("postId");

                    b.Property<Guid>("userReactedId");

                    b.HasKey("Id");

                    b.ToTable("reactionsToPosts");

                    b.HasData(
                        new { Id = new Guid("534659c1-ef47-40c4-bd96-7697eda707cd"), commented = false, liked = true, postId = new Guid("8316ddae-d339-48a1-93e7-20f006e4b343"), userReactedId = new Guid("26482449-1b84-44ab-8ac5-27f8f1634f8c") },
                        new { Id = new Guid("df747e26-b7aa-408d-8079-3014fd5cddef"), commentText = "Glad you did that!", commented = true, liked = true, postId = new Guid("001a3141-0756-4cf2-aab0-d5b4a22ce612"), userReactedId = new Guid("02eefb58-88d5-466d-af8b-12faa98aecd1") },
                        new { Id = new Guid("22f78e7a-0d0d-4cc3-939b-352e4666c848"), commented = false, liked = true, postId = new Guid("fb1c3b7c-35b0-425e-9622-6e3d353b29be"), userReactedId = new Guid("34a35df2-22c7-40f6-b302-caa4af4fece8") }
                    );
                });

            modelBuilder.Entity("CharityData.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("UserAccount");

                    b.Property<Guid>("creditCardId");

                    b.Property<DateTime>("dateOfBirth");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("user");

                    b.HasData(
                        new { Id = new Guid("02eefb58-88d5-466d-af8b-12faa98aecd1"), UserAccount = new Guid("3a3c754a-07e2-4c14-96db-45cee559a474"), creditCardId = new Guid("0fc952ae-13f6-4161-aeb1-b9e040d8dce3"), dateOfBirth = new DateTime(1997, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), firstName = "Foo", gender = "M", lastName = "Bar" },
                        new { Id = new Guid("34a35df2-22c7-40f6-b302-caa4af4fece8"), UserAccount = new Guid("547a73f9-362d-4ca2-ad7c-65d7cb14d0d7"), creditCardId = new Guid("5f6efe01-ecba-4b20-a9ed-6049ae82b776"), dateOfBirth = new DateTime(1980, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), firstName = "John", gender = "F", lastName = "Doe" },
                        new { Id = new Guid("26482449-1b84-44ab-8ac5-27f8f1634f8c"), UserAccount = new Guid("57aec4ab-79d6-4ca5-9a56-10e833d48921"), creditCardId = new Guid("0511a552-89cd-41a3-a581-ea931327682d"), dateOfBirth = new DateTime(1970, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), firstName = "Nicholas", gender = "M", lastName = "Cage" }
                    );
                });

            modelBuilder.Entity("CharityData.Models.UserParticipatingInAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("actionId");

                    b.Property<Guid>("userId");

                    b.HasKey("Id");

                    b.ToTable("userParticipatingInAction");

                    b.HasData(
                        new { Id = new Guid("e5c3548c-2dfe-4faa-b4bc-05997e874bde"), actionId = new Guid("a0a29966-1c47-49bd-9f69-5eb5cd367472"), userId = new Guid("02eefb58-88d5-466d-af8b-12faa98aecd1") },
                        new { Id = new Guid("d0581979-1450-4d2b-9807-e54ef106416a"), actionId = new Guid("3af982da-a061-4cfc-84b9-1ecb6d929342"), userId = new Guid("34a35df2-22c7-40f6-b302-caa4af4fece8") },
                        new { Id = new Guid("a9b7835d-1d6e-4823-8010-a120eecafd9d"), actionId = new Guid("ef83bf0b-fea0-411b-8fdd-1293aee8adb4"), userId = new Guid("26482449-1b84-44ab-8ac5-27f8f1634f8c") }
                    );
                });
#pragma warning restore 612, 618
        }
    }
}
